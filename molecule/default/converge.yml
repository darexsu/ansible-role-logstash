---
- name: Converge
  hosts: all
  become: true

  pre_tasks:
    - name: Unnessessary command
      ansible.builtin.shell:
        cmd: "{{ lookup('env', 'ANSIBLE_COMMAND') }}"
      when: lookup('env', 'ANSIBLE_COMMAND') | length > 0

  vars:
    merge:
      # Logstash
      logstash:
        enabled: true
        version: "8.x"
        repo: "elastic"
        service:
          enabled: true
          state: "started"
      # Logstash -> install
      logstash_install:
        enabled: true
      # Logstash -> config -> logstash.yml
      logstash_yml:
        enabled: true
        file: "logstash.yml"
        src: "logstash_yml.j2"
        backup: false
        data: |
          path.data: /var/lib/logstash
          path.logs: /var/log/logstash
      # Logstash -> config -> logstash.conf
      logstash_conf:
        input_conf:
          enabled: true
          file: "input.conf"
          src: "input_conf.j2"
          backup: false
          data:
            port: '5044'
        output_conf:
          enabled: true
          file: "output.conf"
          src: "output_conf.j2"
          backup: false
          data:
            hosts: '["http://localhost:9200"]'
            index: '"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"'
#           user: 'elastic'
#           password: 'changeme'
      # ElasticSearch -> config -> jvm.options
      logstash_jvm_options:
        enabled: true
        file: "jvm.options"
        src: "jvm_options.j2"
        backup: false
        data: |
          -Xms1g
          -Xmx1g
          11-13:-XX:+UseConcMarkSweepGC
          11-13:-XX:CMSInitiatingOccupancyFraction=75
          11-13:-XX:+UseCMSInitiatingOccupancyOnly
          -Djava.awt.headless=true
          -Dfile.encoding=UTF-8
          -Djruby.compile.invokedynamic=true
          -Djruby.jit.threshold=0
          -Djruby.regexp.interruptible=true
          -XX:+HeapDumpOnOutOfMemoryError
          -Djava.security.egd=file:/dev/urandom
          -Dlog4j2.isThreadContextMapInheritable=true
          11-:--add-opens=java.base/java.security=ALL-UNNAMED
          11-:--add-opens=java.base/java.io=ALL-UNNAMED
          11-:--add-opens=java.base/java.nio.channels=ALL-UNNAMED
          11-:--add-opens=java.base/sun.nio.ch=ALL-UNNAMED
          11-:--add-opens=java.management/sun.management=ALL-UNNAMED

      # FirewallD
      firewalld:
        enabled: true
      # FirewallD -> rules
      firewalld_rules:
        logstash_port_5044:
          enabled: true
          zone: "public"
          state: "enabled"
          port: "5044/tcp"
          permanent: true

  tasks:
    - name: role darexsu logstash
      include_role:
        name: darexsu.logstash